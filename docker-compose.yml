version: "3.8"
services:
  e-backend:
    image: backend_image
    container_name: e-backend
    build:
      context: .
      dockerfile: "docker/app/Backend"
    volumes:
      - ./backend:/var/www/html/
      - ./docker/config/php:/usr/local/etc/
    depends_on:
      - e-db
#    restart: always
    links:
      - e-db
    ports:
      - "30001:80"
    networks:
      - e-networks
  e-frontend:
    image: frontend_image
    container_name: e-frontend
    build:
      context: "./frontend"
      dockerfile: "../docker/app/Frontend"
    volumes:
      - ./frontend/:/var/www/html/
      - /var/www/html/node_modules
    ports:
      - "30000:8080"
    depends_on:
      - e-backend
    networks:
      - e-networks
    restart: always
  e-db:
    image: mysql:8.0
    container_name: e-db
    restart: always
    environment:
      MYSQL_DATABASE: 'ecommerce'
      MYSQL_USER: 'ecommerce'
      MYSQL_PASSWORD: '1181080029'
      MYSQL_ROOT_PASSWORD: '1181080029'
      MYSQL_ROOT_HOST: '%'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql-db:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    ports:
      - "5107:3306"
    networks:
      - e-networks
  e-phpmyadmin:
    container_name: e-phpmyadmin
    image: phpmyadmin:latest
    ports:
      - "30002:80"
    environment:
      - PMA_ARBITRARY=1
    networks:
      - e-networks

volumes:
  mysql-db:

networks:
  e-networks:
    driver: bridge
    name: e-networks
